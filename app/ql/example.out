run example:64: pipe {
    exec {
        name(lf)
        name(,1)
        |[1]
    }
    exec {
        name(pf)
        |[0]
    }
}

run example:64: pipe {
    exec {
        name(lf)
        name(,1)
        |[1]
    }
    exec {
        name(pf)
        name(-l)
        |[0]
    }
}

run example:65: pipe {
    exec {
        name(lf)
        name(/tmp)
        |[1]
    }
    exec {
        name(cd)
        |[0]
    }
}

run example:65: pipe {
    exec {
        name(pwd)
        <[0] /dev/null
    }
}

run example:66: pipe {
    exec {
        name(lf)
        name(/tmp)
        |[1]
    }
    exec {
        name(cd)
        |[0]
        |[1]
    }
    exec {
        name(pf)
        |[0]
    }
}

run example:67: pipe {
    exec {
        name(lf)
        name(/tmkkp)
        |[1]
    }
    exec {
        name(cd)
        |[0]
        |[1]
    }
    exec {
        name(pf)
        |[0]
    }
}

run example:68: pipe:gf {
    exec {
        name(gf)
        name(,-)
        |[1]
    }
    exec {
        name(gr)
        name(^var )
        |[0]
    }
}

run example:69: pipe {
    blk {
        pipe {
            exec {
                name(date)
            }
        }
        pipe {
            exec {
                name(pwd)
            }
        }
    }
}

run example:70: pipe {
    blk {
        pipe {
            exec {
                name(date)
            }
        }
        pipe {
            exec {
                name(pwd)
            }
        }
        |[1]
        <[0] /dev/null
    }
    exec {
        name(trex)
        name(-u)
        |[0]
    }
}

run example:71: pipe {
    exec {
        name(exit)
        name(oops)
    }
}

run example:72: pipe {
    exec {
        name(exit)
        name(oops)
        <[0] /dev/null
    }
}

run example:73: pipe {
    exec {
        name(sleep)
        name(5)
        <[0] /dev/null
    }
}

run example:74: pipe {
    exec {
        name(trex)
        name(-u)
    }
}

run example:75: pipe {
    exec {
        name(trex)
        name(-u)
        <[0] /dev/null
    }
}

run example:77: pipe {
    exec {
        name(flag)
    }
}

run example:77: pipe {
    exec {
        name(flag)
        name(+D)
    }
}

run example:77: pipe {
    exec {
        name(flag)
        name(-D)
    }
}

run example:78: pipe {
    exec {
        name(type)
        name(sleep)
    }
}

run example:80: pipe {
    exec {
        name(echo)
        inblk {
            pipe {
                exec {
                    name(lf)
                    name(,1)
                    |[1]
                }
                exec {
                    name(pf)
                    name(-l)
                    |[0]
                    |[1]
                }
            }
        }
        <[0] /dev/null
    }
}

run example:81: pipe {
    exec {
        name(echo)
        rawinblk {
            pipe {
                exec {
                    name(lf)
                    name(,1)
                    |[1]
                }
                exec {
                    name(pf)
                    name(-l)
                    |[0]
                    |[1]
                }
            }
        }
        <[0] /dev/null
    }
}

run example:82: pipe {
    exec {
        name(echo)
        singleinblk {
            pipe {
                exec {
                    name(lf)
                    name(,1)
                    |[1]
                }
                exec {
                    name(pf)
                    name(-l)
                    |[0]
                    |[1]
                }
            }
        }
        <[0] /dev/null
    }
}

run example:83: pipe {
    exec {
        name(echo)
        name( quoted {}$
string)
        <[0] /dev/null
    }
}

run example:85: pipe {
    exec {
        name(echo)
        name(another 'quoted'
string)
        <[0] /dev/null
    }
}

run example:87: pipe {
    exec {
        name(echo)
        name(a)
        >[1] /tmp/a
        <[0] /dev/null
    }
}

run example:87: pipe {
    exec {
        name(cat)
        name(/tmp/a)
        <[0] /dev/null
    }
}

run example:89: pipe {
    exec {
        name(echo)
        name(a)
        >>[1] /tmp/a
    }
}

run example:89: pipe {
    exec {
        name(cat)
        name(/tmp/a)
        <[0] /dev/null
    }
}

run example:91: pipe {
    exec {
        name(lf)
        name(/tmp/a)
        name(/fdsfds)
        >[2] /tmp/c
        |[1]
    }
    exec {
        name(pf)
        >[1] /tmp/b
        |[0]
    }
}

run example:93: pipe {
    exec {
        name(lf)
        name(/tmp/a)
        name(/fdsfds)
        |[2]
        >[1=2]
    }
    exec {
        name(pf)
        >[1] /tmp/b
        |[0]
    }
}

run example:93: pipe {
    exec {
        name(cat)
        name(/tmp/b)
        <[0] /dev/null
    }
}

run example:95: pipe {
    exec {
        name(ls)
        name(/tmp/a)
        name(/fdsfds)
        >[2=1]
        <[0] /dev/null
    }
}

run example:97: pipe:gf {
    exec {
        name(gf)
        name(a)
        |[1]
    }
    exec {
        name(grep)
        name(x)
        >[2] /dev/null
        |[0]
        |[1]
    }
    exec {
        name(cat)
        |[0]
        |[2]
        >[1=2]
    }
    exec {
        name(wc)
        >[2] b
        >[1=2]
        |[0]
    }
}

run example:100: pipe {
    exec {
        name(echo)
        name(script)
        name(name)
        name(is)
        val(argv0)
        name(and)
        name(has)
        len(argv)
        name(args)
        <[0] /dev/null
    }
}

run example:102: set(v1) {
    name(x)
}

run example:102: set(v1) {
    name(a)
    name(b)
    name(c)
}

run example:102: pipe {
    exec {
        name(echo)
        val(v1)
        val(v1)(1)
        len(v1)
        <[0] /dev/null
    }
}

run example:104: set(v1)(2) {
    name(x)
}

run example:104: set(v1)(2) {
    inblk {
        pipe {
            exec {
                name(echo)
                name(a)
                name(b)
                name(c)
                |[1]
            }
        }
    }
}

run example:105: set(v1) {
    set(temp)(/tmp)
    set(home)(/usr/foo)
}

run example:106: set(v1)(temp) {
    name(foo)
    name(bar)
}

run example:107: pipe {
    exec {
        name(echo)
        val(v1)
        val(v1)(temp)
        len(v1)
        <[0] /dev/null
    }
}

run example:109: pipe(x) {
    blk {
        pipe {
            exec {
                name(echo)
                name(a)
            }
        }
        pipe {
            exec {
                name(echo)
                name(b)
            }
        }
    }
}

run example:110: pipe {
    exec {
        name(wait)
        name(x)
    }
}

run example:111: pipe {
    exec {
        name(echo)
        val(status)
        <[0] /dev/null
    }
}

run example:113: pipe(&) {
    for {
        names {
            name(arg)
            val(argv)
        }
        blk {
            pipe {
                exec {
                    name(echo)
                    name(arg)
                    name(is)
                    val(arg)
                }
            }
        }
        >[1] a
    }
}

run example:116: pipe(&) {
    for {
        names {
            name(argx)
            val(argv)
        }
        blk {
            pipe {
                exec {
                    name(echo)
                    name(argx)
                    name(is)
                    val(arg)
                }
            }
        }
        >[1] a
    }
}

run example:127: pipe {
    exec {
        name(echo)
        name(a)
        |[1]
        <[0] /dev/null
    }
    teeblk {
        pipe {
            exec {
                name(pf)
            }
        }
        pipe {
            exec {
                name(trex)
                name(-u)
            }
        }
        |[0]
    }
}

run example:133: pipe:gf {
    exec {
        name(gf)
        name(/tmp/df,)
        |[1]
    }
    exec {
        name(diffs)
        pipeblk {
            pipe {
                exec {
                    name(gf)
                    name(../diffs,)
                    <[0] /dev/null
                    |[1]
                }
            }
        }
        |[0]
    }
}

PASS
ok  	clive/app/ql	0.087s
run example:141: cond {
    cond {
        pipe {
            exec {
                name(lf)
                name(.)
                |[1]
            }
            exec {
                name(pf)
                |[0]
            }
        }
        pipe {
            exec {
                name(lf)
                name(/fsd)
                >[2] /dev/null
                |[1]
            }
            exec {
                name(pf)
                |[0]
            }
        }
        pipe {
            exec {
                name(lf)
                name(/fdsfds)
                |[1]
            }
            exec {
                name(pf)
                |[0]
            }
        }
    }
    cond {
        pipe {
            exec {
                name(echo)
                name(x)
                <[0] /dev/null
            }
        }
        pipe {
            exec {
                name(lf)
                name(sdsd)
                |[1]
            }
            exec {
                name(pf)
                |[0]
            }
        }
        pipe {
            exec {
                name(echo)
                name(x)
                <[0] /dev/null
            }
        }
    }
    cond {
        pipe {
            exec {
                name(echo)
                name(q)
                <[0] /dev/null
            }
        }
        pipe {
            exec {
                name(echo)
                name(w)
                <[0] /dev/null
            }
        }
    }
}

run example:147: cond {
    cond {
        pipe {
            exec {
                name(lf)
                name(.)
                |[1]
            }
            exec {
                name(pf)
                |[0]
            }
        }
        pipe {
            blk {
                pipe {
                    exec {
                        name(/fsd)
                    }
                }
                >[2] /dev/null
            }
        }
        pipe {
            blk {
                pipe {
                    exec {
                        name(/fdsfds)
                    }
                }
            }
        }
    }
    cond {
        pipe {
            exec {
                name(echo)
                name(x)
                <[0] /dev/null
            }
        }
        pipe {
            exec {
                name(lf)
                name(sdsd)
                |[1]
            }
            exec {
                name(pf)
                |[0]
            }
        }
        pipe {
            blk {
                pipe {
                    exec {
                        name(echo)
                        name(x)
                        <[0] /dev/null
                    }
                }
            }
        }
    }
    cond {
        pipe {
            exec {
                name(echo)
                name(q)
                <[0] /dev/null
            }
        }
        pipe {
            exec {
                name(lf)
                name(/fdsfds)
                |[1]
            }
            exec {
                name(pf)
                |[0]
            }
        }
        pipe {
            blk {
                pipe {
                    exec {
                        name(echo)
                        name(y)
                    }
                }
            }
        }
    }
    cond {
        pipe {
            blk {
                pipe {
                    exec {
                        name(echo)
                        name(else)
                    }
                }
            }
        }
    }
}

run example:157: pipe {
    exec {
        name(lf)
        name(,-)
        |[1]
    }
    exec {
        name(pf)
        |[0]
        |[1]
    }
    for:gf {
        names {
            name(file)
        }
        blk {
            pipe {
                exec {
                    name(echo)
                    name(file)
                    name(is)
                    val(file)
                }
            }
        }
        |[0]
    }
}

run example:161: pipe:gf {
    exec {
        name(gf)
        name(,~fns)
        |[1]
    }
    exec {
        name(lns)
        |[0]
        |[1]
    }
    for:gf {
        names {
            name(ln)
        }
        blk {
            pipe {
                exec {
                    name(echo)
                    name(line)
                    name(is)
                    val(ln)
                }
            }
            set(flds) {
                inblk {
                    pipe {
                        exec {
                            name(echo)
                            val(ln)
                            |[1]
                            <[0] /dev/null
                        }
                        exec {
                            name(words)
                            |[0]
                            |[1]
                        }
                    }
                }
            }
            pipe {
                exec {
                    name(echo)
                    len(flds)
                    name(fields:)
                    app {
                        val(flds)
                        name(X)
                    }
                }
            }
        }
        |[0]
    }
}

run example:167: pipe:gf {
    exec {
        name(gf)
        name(,~fns)
        |[1]
    }
    exec {
        name(words)
        |[0]
        |[1]
    }
    for:gf {
        names {
            name(w)
        }
        blk {
            pipe {
                exec {
                    name(echo)
                    name(word)
                    name(is)
                    val(w)
                }
            }
        }
        |[0]
    }
}

run example:171: set(x) {
    name(3)
}

run example:171: pipe {
    while {
        pipe {
            exec {
                name(:)
                val(x)
                name(>)
                name(0)
            }
        }
        blk {
            pipe {
                exec {
                    name(echo)
                    val(x)
                }
            }
            set(x) {
                inblk {
                    pipe {
                        exec {
                            name(:)
                            val(x)
                            name(-)
                            name(1)
                            |[1]
                        }
                    }
                }
            }
        }
    }
}

