
state 0
	$accept: .prog $end 
	proghdr: .    (2)

	error  shift 5
	CONSTS  reduce 2 (src line 236)
	FUNCTION  reduce 2 (src line 236)
	PROCEDURE  reduce 2 (src line 236)
	PROGRAM  shift 4
	TYPES  reduce 2 (src line 236)
	VARS  reduce 2 (src line 236)
	ID  shift 3
	.  error

	prog  goto 1
	proghdr  goto 2

state 1
	$accept:  prog.$end 

	$end  accept
	.  error


state 2
	prog:  proghdr.decls 

	CONSTS  shift 8
	FUNCTION  shift 16
	PROCEDURE  shift 15
	TYPES  shift 9
	VARS  shift 10
	.  error

	prochdr  goto 13
	funchdr  goto 14
	decls  goto 6
	decl  goto 7
	procdef  goto 11
	funcdef  goto 12

state 3
	proghdr:  ID.ID ; 

	ID  shift 17
	.  error


state 4
	proghdr:  PROGRAM.ID ; 
	proghdr:  PROGRAM.ID error 

	ID  shift 18
	.  error


state 5
	proghdr:  error.; 

	;  shift 19
	.  error


state 6
	prog:  proghdr decls.    (1)
	decls:  decls.decl 

	CONSTS  shift 8
	FUNCTION  shift 16
	PROCEDURE  shift 15
	TYPES  shift 9
	VARS  shift 10
	.  reduce 1 (src line 228)

	prochdr  goto 13
	funchdr  goto 14
	decl  goto 20
	procdef  goto 11
	funcdef  goto 12

state 7
	decls:  decl.    (8)

	.  reduce 8 (src line 263)


state 8
	decl:  CONSTS.: consts 

	:  shift 21
	.  error


state 9
	decl:  TYPES.: types 

	:  shift 22
	.  error


state 10
	decl:  VARS.: vars 

	:  shift 23
	.  error


state 11
	decl:  procdef.    (12)

	.  reduce 12 (src line 282)


state 12
	decl:  funcdef.    (13)

	.  reduce 13 (src line 284)


state 13
	procdef:  prochdr.; 
	procdef:  prochdr.optvars body 
	optvars: .    (34)

	error  shift 30
	ID  shift 28
	TYPEID  shift 29
	;  shift 24
	{  reduce 34 (src line 379)
	.  error

	vars  goto 26
	vardef  goto 27
	optvars  goto 25

state 14
	funcdef:  funchdr.; 
	funcdef:  funchdr.optvars body 
	optvars: .    (34)

	error  shift 30
	ID  shift 28
	TYPEID  shift 29
	;  shift 31
	{  reduce 34 (src line 379)
	.  error

	vars  goto 26
	vardef  goto 27
	optvars  goto 32

state 15
	prochdr:  PROCEDURE.ID $$35 procparms 

	ID  shift 33
	.  error


state 16
	funchdr:  FUNCTION.ID $$41 ( optparms ) : funcret 

	ID  shift 34
	.  error


state 17
	proghdr:  ID ID.; 

	;  shift 35
	.  error


state 18
	proghdr:  PROGRAM ID.; 
	proghdr:  PROGRAM ID.error 

	error  shift 37
	;  shift 36
	.  error


state 19
	proghdr:  error ;.    (6)

	.  reduce 6 (src line 256)


state 20
	decls:  decls decl.    (7)

	.  reduce 7 (src line 261)


state 21
	decl:  CONSTS :.consts 

	error  shift 41
	ID  shift 40
	.  error

	consts  goto 38
	constdef  goto 39

state 22
	decl:  TYPES :.types 

	error  shift 46
	ID  shift 44
	TYPEID  shift 45
	.  error

	types  goto 42
	typedef  goto 43

state 23
	decl:  VARS :.vars 

	error  shift 30
	ID  shift 28
	TYPEID  shift 29
	.  error

	vars  goto 47
	vardef  goto 27

state 24
	procdef:  prochdr ;.    (31)

	.  reduce 31 (src line 362)


state 25
	procdef:  prochdr optvars.body 

	{  shift 49
	.  error

	body  goto 48

state 26
	vars:  vars.vardef 
	optvars:  vars.    (33)

	error  shift 30
	ID  shift 28
	TYPEID  shift 29
	{  reduce 33 (src line 377)
	.  error

	vardef  goto 50

state 27
	vars:  vardef.    (19)

	.  reduce 19 (src line 299)


state 28
	vardef:  ID.: TYPEID ; 
	vardef:  ID.: ID ; 

	:  shift 51
	.  error


state 29
	vardef:  TYPEID.: type ; 

	:  shift 52
	.  error


state 30
	vardef:  error.; 

	;  shift 53
	.  error


state 31
	funcdef:  funchdr ;.    (39)

	.  reduce 39 (src line 403)


state 32
	funcdef:  funchdr optvars.body 

	{  shift 49
	.  error

	body  goto 54

state 33
	prochdr:  PROCEDURE ID.$$35 procparms 
	$$35: .    (35)

	.  reduce 35 (src line 382)

	$$35  goto 55

state 34
	funchdr:  FUNCTION ID.$$41 ( optparms ) : funcret 
	$$41: .    (41)

	.  reduce 41 (src line 418)

	$$41  goto 56

state 35
	proghdr:  ID ID ;.    (3)

	.  reduce 3 (src line 237)


state 36
	proghdr:  PROGRAM ID ;.    (4)

	.  reduce 4 (src line 245)


state 37
	proghdr:  PROGRAM ID error.    (5)

	.  reduce 5 (src line 250)


state 38
	decl:  CONSTS : consts.    (9)
	consts:  consts.constdef 

	$end  reduce 9 (src line 266)
	error  shift 41
	CONSTS  reduce 9 (src line 266)
	FUNCTION  reduce 9 (src line 266)
	PROCEDURE  reduce 9 (src line 266)
	TYPES  reduce 9 (src line 266)
	VARS  reduce 9 (src line 266)
	ID  shift 40
	.  error

	constdef  goto 57

state 39
	consts:  constdef.    (15)

	.  reduce 15 (src line 289)


state 40
	constdef:  ID.= expr ; 

	=  shift 58
	.  error


state 41
	constdef:  error.; 

	;  shift 59
	.  error


state 42
	decl:  TYPES : types.    (10)
	types:  types.typedef 

	$end  reduce 10 (src line 271)
	error  shift 46
	CONSTS  reduce 10 (src line 271)
	FUNCTION  reduce 10 (src line 271)
	PROCEDURE  reduce 10 (src line 271)
	TYPES  reduce 10 (src line 271)
	VARS  reduce 10 (src line 271)
	ID  shift 44
	TYPEID  shift 45
	.  error

	typedef  goto 60

state 43
	types:  typedef.    (17)

	.  reduce 17 (src line 294)


state 44
	typedef:  ID.= type ; 

	=  shift 61
	.  error


state 45
	typedef:  TYPEID.= type ; 

	=  shift 62
	.  error


state 46
	typedef:  error.; 

	;  shift 63
	.  error


state 47
	decl:  VARS : vars.    (11)
	vars:  vars.vardef 

	$end  reduce 11 (src line 276)
	error  shift 30
	CONSTS  reduce 11 (src line 276)
	FUNCTION  reduce 11 (src line 276)
	PROCEDURE  reduce 11 (src line 276)
	TYPES  reduce 11 (src line 276)
	VARS  reduce 11 (src line 276)
	ID  shift 28
	TYPEID  shift 29
	.  error

	vardef  goto 50

state 48
	procdef:  prochdr optvars body.    (32)

	.  reduce 32 (src line 368)


state 49
	body:  {.stmts } 
	body:  {.} 

	error  shift 77
	DO  shift 81
	FOR  shift 84
	IF  shift 88
	SWITCH  shift 80
	RETURN  shift 85
	WHILE  shift 83
	ID  shift 79
	TYPEID  shift 87
	;  shift 86
	{  shift 49
	}  shift 65
	.  error

	stmt  goto 66
	body  goto 69
	assignstmt  goto 67
	casestmt  goto 70
	forstmt  goto 74
	ifstmt  goto 72
	procstmt  goto 68
	repeatstmt  goto 71
	retstmt  goto 75
	whilestmt  goto 73
	ifhdr  goto 82
	nullstmt  goto 76
	stmts  goto 64
	lvalue  goto 78

state 50
	vars:  vars vardef.    (18)

	.  reduce 18 (src line 297)


state 51
	vardef:  ID :.TYPEID ; 
	vardef:  ID :.ID ; 

	ID  shift 90
	TYPEID  shift 89
	.  error


state 52
	vardef:  TYPEID :.type ; 

	ARRAY  shift 105
	FUNCTION  shift 104
	PROCEDURE  shift 103
	RECORD  shift 106
	TYPEID  shift 92
	(  shift 101
	^  shift 102
	.  error

	type  goto 91
	newtype  goto 93
	ordtype  goto 94
	ptrtype  goto 96
	rangetype  goto 95
	proctype  goto 97
	functype  goto 98
	recordtype  goto 100
	arraytype  goto 99

state 53
	vardef:  error ;.    (30)

	.  reduce 30 (src line 355)


state 54
	funcdef:  funchdr optvars body.    (40)

	.  reduce 40 (src line 409)


state 55
	prochdr:  PROCEDURE ID $$35.procparms 
	procparms: .    (38)

	(  shift 108
	.  reduce 38 (src line 398)

	procparms  goto 107

state 56
	funchdr:  FUNCTION ID $$41.( optparms ) : funcret 

	(  shift 109
	.  error


state 57
	consts:  consts constdef.    (14)

	.  reduce 14 (src line 287)


state 58
	constdef:  ID =.expr ; 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  error

	expr  goto 110
	primary  goto 111
	lvalue  goto 112

state 59
	constdef:  error ;.    (21)

	.  reduce 21 (src line 307)


state 60
	types:  types typedef.    (16)

	.  reduce 16 (src line 292)


state 61
	typedef:  ID =.type ; 

	ARRAY  shift 105
	FUNCTION  shift 104
	PROCEDURE  shift 103
	RECORD  shift 106
	TYPEID  shift 92
	(  shift 101
	^  shift 102
	.  error

	type  goto 127
	newtype  goto 93
	ordtype  goto 94
	ptrtype  goto 96
	rangetype  goto 95
	proctype  goto 97
	functype  goto 98
	recordtype  goto 100
	arraytype  goto 99

state 62
	typedef:  TYPEID =.type ; 

	ARRAY  shift 105
	FUNCTION  shift 104
	PROCEDURE  shift 103
	RECORD  shift 106
	TYPEID  shift 92
	(  shift 101
	^  shift 102
	.  error

	type  goto 128
	newtype  goto 93
	ordtype  goto 94
	ptrtype  goto 96
	rangetype  goto 95
	proctype  goto 97
	functype  goto 98
	recordtype  goto 100
	arraytype  goto 99

state 63
	typedef:  error ;.    (24)

	.  reduce 24 (src line 324)


state 64
	body:  { stmts.} 
	stmts:  stmts.stmt 

	error  shift 77
	DO  shift 81
	FOR  shift 84
	IF  shift 88
	SWITCH  shift 80
	RETURN  shift 85
	WHILE  shift 83
	ID  shift 79
	TYPEID  shift 87
	;  shift 86
	{  shift 49
	}  shift 129
	.  error

	stmt  goto 130
	body  goto 69
	assignstmt  goto 67
	casestmt  goto 70
	forstmt  goto 74
	ifstmt  goto 72
	procstmt  goto 68
	repeatstmt  goto 71
	retstmt  goto 75
	whilestmt  goto 73
	ifhdr  goto 82
	nullstmt  goto 76
	lvalue  goto 78

state 65
	body:  { }.    (96)

	.  reduce 96 (src line 728)


state 66
	stmts:  stmt.    (98)

	.  reduce 98 (src line 741)


state 67
	stmt:  assignstmt.    (99)

	.  reduce 99 (src line 748)


state 68
	stmt:  procstmt.    (100)

	.  reduce 100 (src line 750)


state 69
	stmt:  body.    (101)

	.  reduce 101 (src line 752)


state 70
	stmt:  casestmt.    (102)

	.  reduce 102 (src line 754)


state 71
	stmt:  repeatstmt.    (103)

	.  reduce 103 (src line 756)


state 72
	stmt:  ifstmt.    (104)

	.  reduce 104 (src line 758)


state 73
	stmt:  whilestmt.    (105)

	.  reduce 105 (src line 760)


state 74
	stmt:  forstmt.    (106)

	.  reduce 106 (src line 762)


state 75
	stmt:  retstmt.    (107)

	.  reduce 107 (src line 764)


state 76
	stmt:  nullstmt.    (108)

	.  reduce 108 (src line 766)


state 77
	stmt:  error.; 

	;  shift 131
	.  error


state 78
	assignstmt:  lvalue.= expr ; 
	assignstmt:  lvalue.: = $$125 expr ; 
	lvalue:  lvalue.[ expr ] 
	lvalue:  lvalue.. ID 
	lvalue:  lvalue.. TYPEID 
	lvalue:  lvalue.^ 

	:  shift 133
	=  shift 132
	^  shift 136
	[  shift 134
	.  shift 135
	.  error


state 79
	procstmt:  ID.( optargs ) ; 
	lvalue:  ID.    (176)

	(  shift 137
	.  reduce 176 (src line 1149)


state 80
	casestmt:  SWITCH.( expr ) { cases } 

	(  shift 138
	.  error


state 81
	repeatstmt:  DO.body WHILE ( expr ) ; 

	{  shift 49
	.  error

	body  goto 139

state 82
	ifstmt:  ifhdr.body 
	ifstmt:  ifhdr.body ELSE body 
	ifstmt:  ifhdr.body ELSE ifstmt 

	{  shift 49
	.  error

	body  goto 140

state 83
	whilestmt:  WHILE.( expr ) body 

	(  shift 141
	.  error


state 84
	forstmt:  FOR.( lvalue = expr , forcond ) body 

	(  shift 142
	.  error


state 85
	retstmt:  RETURN.expr ; 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  error

	expr  goto 143
	primary  goto 111
	lvalue  goto 112

state 86
	nullstmt:  ;.    (110)

	.  reduce 110 (src line 776)


state 87
	lvalue:  TYPEID.    (181)

	.  reduce 181 (src line 1175)


state 88
	ifhdr:  IF.( expr ) 

	(  shift 144
	.  error


state 89
	vardef:  ID : TYPEID.; 

	;  shift 145
	.  error


state 90
	vardef:  ID : ID.; 

	;  shift 146
	.  error


state 91
	vardef:  TYPEID : type.; 

	;  shift 147
	.  error


state 92
	type:  TYPEID.    (25)
	rangetype:  TYPEID.expr DOTDOT expr 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  reduce 25 (src line 332)

	expr  goto 148
	primary  goto 111
	lvalue  goto 112

state 93
	type:  newtype.    (26)

	.  reduce 26 (src line 337)


state 94
	newtype:  ordtype.    (58)

	.  reduce 58 (src line 516)


state 95
	newtype:  rangetype.    (59)

	.  reduce 59 (src line 518)


state 96
	newtype:  ptrtype.    (60)

	.  reduce 60 (src line 520)


state 97
	newtype:  proctype.    (61)

	.  reduce 61 (src line 522)


state 98
	newtype:  functype.    (62)

	.  reduce 62 (src line 524)


state 99
	newtype:  arraytype.    (63)

	.  reduce 63 (src line 526)


state 100
	newtype:  recordtype.    (64)

	.  reduce 64 (src line 528)


state 101
	ordtype:  (.ids ) 

	error  shift 151
	ID  shift 150
	.  error

	ids  goto 149

state 102
	ptrtype:  ^.TYPEID 
	ptrtype:  ^.ID 

	ID  shift 153
	TYPEID  shift 152
	.  error


state 103
	proctype:  PROCEDURE.$$89 ( parms ) 
	$$89: .    (89)

	.  reduce 89 (src line 687)

	$$89  goto 154

state 104
	functype:  FUNCTION.$$91 ( parms ) : funcret 
	$$91: .    (91)

	.  reduce 91 (src line 699)

	$$91  goto 155

state 105
	arraytype:  ARRAY.[ TYPEID ] OF TYPEID 
	arraytype:  ARRAY.[ expr DOTDOT expr ] OF TYPEID 

	[  shift 156
	.  error


state 106
	recordtype:  RECORD.$$77 recordfields 
	$$77: .    (77)

	.  reduce 77 (src line 606)

	$$77  goto 157

state 107
	prochdr:  PROCEDURE ID $$35 procparms.    (36)

	.  reduce 36 (src line 387)


state 108
	procparms:  (.optparms ) 
	optparms: .    (44)

	error  shift 161
	REF  shift 163
	ID  shift 162
	TYPEID  shift 164
	)  reduce 44 (src line 433)
	.  error

	parms  goto 159
	optparms  goto 158
	parm  goto 160

state 109
	funchdr:  FUNCTION ID $$41 (.optparms ) : funcret 
	optparms: .    (44)

	error  shift 161
	REF  shift 163
	ID  shift 162
	TYPEID  shift 164
	)  reduce 44 (src line 433)
	.  error

	parms  goto 159
	optparms  goto 165
	parm  goto 160

state 110
	constdef:  ID = expr.; 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.POW expr 
	expr:  expr.BADOP expr 

	OR  shift 172
	AND  shift 171
	EQ  shift 173
	NE  shift 174
	LE  shift 179
	GE  shift 178
	<  shift 176
	>  shift 177
	BADOP  shift 181
	+  shift 167
	-  shift 168
	*  shift 169
	/  shift 170
	%  shift 175
	POW  shift 180
	;  shift 166
	.  error


state 111
	expr:  primary.    (140)

	.  reduce 140 (src line 971)


state 112
	primary:  lvalue.    (156)
	lvalue:  lvalue.[ expr ] 
	lvalue:  lvalue.. ID 
	lvalue:  lvalue.. TYPEID 
	lvalue:  lvalue.^ 

	^  shift 136
	[  shift 134
	.  shift 135
	.  reduce 156 (src line 1049)


state 113
	primary:  +.primary 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  error

	primary  goto 182
	lvalue  goto 112

state 114
	primary:  -.primary 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  error

	primary  goto 183
	lvalue  goto 112

state 115
	primary:  INT.    (159)

	.  reduce 159 (src line 1061)


state 116
	primary:  CHAR.    (160)

	.  reduce 160 (src line 1066)


state 117
	primary:  REAL.    (161)

	.  reduce 161 (src line 1071)


state 118
	primary:  STR.    (162)

	.  reduce 162 (src line 1076)


state 119
	primary:  NIL.    (163)

	.  reduce 163 (src line 1081)


state 120
	primary:  TRUE.    (164)

	.  reduce 164 (src line 1086)


state 121
	primary:  FALSE.    (165)

	.  reduce 165 (src line 1091)


state 122
	primary:  ID.( optargs ) 
	lvalue:  ID.    (176)

	(  shift 184
	.  reduce 176 (src line 1149)


state 123
	primary:  (.expr ) 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  error

	expr  goto 185
	primary  goto 111
	lvalue  goto 112

state 124
	primary:  NOT.primary 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  error

	primary  goto 186
	lvalue  goto 112

state 125
	primary:  TYPEID.( args ) 
	lvalue:  TYPEID.    (181)

	(  shift 187
	.  reduce 181 (src line 1175)


state 126
	primary:  LEN.lenarg 

	ID  shift 190
	TYPEID  shift 189
	.  error

	lenarg  goto 188

state 127
	typedef:  ID = type.; 

	;  shift 191
	.  error


state 128
	typedef:  TYPEID = type.; 

	;  shift 192
	.  error


state 129
	body:  { stmts }.    (95)

	.  reduce 95 (src line 723)


state 130
	stmts:  stmts stmt.    (97)

	.  reduce 97 (src line 735)


state 131
	stmt:  error ;.    (109)

	.  reduce 109 (src line 768)


state 132
	assignstmt:  lvalue =.expr ; 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  error

	expr  goto 193
	primary  goto 111
	lvalue  goto 112

state 133
	assignstmt:  lvalue :.= $$125 expr ; 

	=  shift 194
	.  error


state 134
	lvalue:  lvalue [.expr ] 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  error

	expr  goto 195
	primary  goto 111
	lvalue  goto 112

state 135
	lvalue:  lvalue ..ID 
	lvalue:  lvalue ..TYPEID 

	ID  shift 196
	TYPEID  shift 197
	.  error


state 136
	lvalue:  lvalue ^.    (180)

	.  reduce 180 (src line 1170)


state 137
	procstmt:  ID (.optargs ) ; 
	optargs: .    (129)

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  reduce 129 (src line 901)

	args  goto 199
	optargs  goto 198
	expr  goto 200
	primary  goto 111
	lvalue  goto 112

state 138
	casestmt:  SWITCH (.expr ) { cases } 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  error

	expr  goto 201
	primary  goto 111
	lvalue  goto 112

state 139
	repeatstmt:  DO body.WHILE ( expr ) ; 

	WHILE  shift 202
	.  error


state 140
	ifstmt:  ifhdr body.    (120)
	ifstmt:  ifhdr body.ELSE body 
	ifstmt:  ifhdr body.ELSE ifstmt 

	ELSE  shift 203
	.  reduce 120 (src line 847)


state 141
	whilestmt:  WHILE (.expr ) body 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  error

	expr  goto 204
	primary  goto 111
	lvalue  goto 112

state 142
	forstmt:  FOR (.lvalue = expr , forcond ) body 

	ID  shift 206
	TYPEID  shift 87
	.  error

	lvalue  goto 205

state 143
	retstmt:  RETURN expr.; 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.POW expr 
	expr:  expr.BADOP expr 

	OR  shift 172
	AND  shift 171
	EQ  shift 173
	NE  shift 174
	LE  shift 179
	GE  shift 178
	<  shift 176
	>  shift 177
	BADOP  shift 181
	+  shift 167
	-  shift 168
	*  shift 169
	/  shift 170
	%  shift 175
	POW  shift 180
	;  shift 207
	.  error


state 144
	ifhdr:  IF (.expr ) 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  error

	expr  goto 208
	primary  goto 111
	lvalue  goto 112

state 145
	vardef:  ID : TYPEID ;.    (27)

	.  reduce 27 (src line 340)


state 146
	vardef:  ID : ID ;.    (29)

	.  reduce 29 (src line 350)


state 147
	vardef:  TYPEID : type ;.    (28)

	.  reduce 28 (src line 345)


state 148
	rangetype:  TYPEID expr.DOTDOT expr 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.POW expr 
	expr:  expr.BADOP expr 

	OR  shift 172
	AND  shift 171
	EQ  shift 173
	NE  shift 174
	LE  shift 179
	GE  shift 178
	<  shift 176
	>  shift 177
	BADOP  shift 181
	+  shift 167
	-  shift 168
	*  shift 169
	/  shift 170
	%  shift 175
	POW  shift 180
	DOTDOT  shift 209
	.  error


state 149
	ids:  ids., ID 
	ids:  ids.error 
	ids:  ids.error ID 
	ids:  ids., error 
	ordtype:  ( ids.) 

	error  shift 211
	,  shift 210
	)  shift 212
	.  error


state 150
	ids:  ID.    (68)

	.  reduce 68 (src line 552)


state 151
	ids:  error.    (69)

	.  reduce 69 (src line 558)


state 152
	ptrtype:  ^ TYPEID.    (65)

	.  reduce 65 (src line 531)


state 153
	ptrtype:  ^ ID.    (66)

	.  reduce 66 (src line 537)


state 154
	proctype:  PROCEDURE $$89.( parms ) 

	(  shift 213
	.  error


state 155
	functype:  FUNCTION $$91.( parms ) : funcret 

	(  shift 214
	.  error


state 156
	arraytype:  ARRAY [.TYPEID ] OF TYPEID 
	arraytype:  ARRAY [.expr DOTDOT expr ] OF TYPEID 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 215
	(  shift 123
	.  error

	expr  goto 216
	primary  goto 111
	lvalue  goto 112

state 157
	recordtype:  RECORD $$77.recordfields 

	error  shift 219
	{  shift 218
	.  error

	recordfields  goto 217

state 158
	procparms:  ( optparms.) 

	)  shift 220
	.  error


state 159
	optparms:  parms.    (43)
	parms:  parms., parm 
	parms:  parms.; parm 
	parms:  parms.error 
	parms:  parms.error parm 
	parms:  parms., error 

	error  shift 223
	,  shift 221
	;  shift 222
	)  reduce 43 (src line 431)
	.  error


state 160
	parms:  parm.    (47)

	.  reduce 47 (src line 453)


state 161
	parms:  error.    (51)

	.  reduce 51 (src line 475)


state 162
	parm:  ID.: TYPEID 
	parm:  ID.: ID 

	:  shift 224
	.  error


state 163
	parm:  REF.ID : TYPEID 
	parm:  REF.ID : ID 
	parm:  REF.TYPEID : TYPEID 

	ID  shift 225
	TYPEID  shift 226
	.  error


state 164
	parm:  TYPEID.: TYPEID 

	:  shift 227
	.  error


state 165
	funchdr:  FUNCTION ID $$41 ( optparms.) : funcret 

	)  shift 228
	.  error


state 166
	constdef:  ID = expr ;.    (20)

	.  reduce 20 (src line 302)


state 167
	expr:  expr +.expr 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  error

	expr  goto 229
	primary  goto 111
	lvalue  goto 112

state 168
	expr:  expr -.expr 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  error

	expr  goto 230
	primary  goto 111
	lvalue  goto 112

state 169
	expr:  expr *.expr 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  error

	expr  goto 231
	primary  goto 111
	lvalue  goto 112

state 170
	expr:  expr /.expr 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  error

	expr  goto 232
	primary  goto 111
	lvalue  goto 112

state 171
	expr:  expr AND.expr 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  error

	expr  goto 233
	primary  goto 111
	lvalue  goto 112

state 172
	expr:  expr OR.expr 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  error

	expr  goto 234
	primary  goto 111
	lvalue  goto 112

state 173
	expr:  expr EQ.expr 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  error

	expr  goto 235
	primary  goto 111
	lvalue  goto 112

state 174
	expr:  expr NE.expr 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  error

	expr  goto 236
	primary  goto 111
	lvalue  goto 112

state 175
	expr:  expr %.expr 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  error

	expr  goto 237
	primary  goto 111
	lvalue  goto 112

state 176
	expr:  expr <.expr 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  error

	expr  goto 238
	primary  goto 111
	lvalue  goto 112

state 177
	expr:  expr >.expr 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  error

	expr  goto 239
	primary  goto 111
	lvalue  goto 112

state 178
	expr:  expr GE.expr 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  error

	expr  goto 240
	primary  goto 111
	lvalue  goto 112

state 179
	expr:  expr LE.expr 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  error

	expr  goto 241
	primary  goto 111
	lvalue  goto 112

state 180
	expr:  expr POW.expr 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  error

	expr  goto 242
	primary  goto 111
	lvalue  goto 112

state 181
	expr:  expr BADOP.expr 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  error

	expr  goto 243
	primary  goto 111
	lvalue  goto 112

state 182
	primary:  + primary.    (157)

	.  reduce 157 (src line 1051)


state 183
	primary:  - primary.    (158)

	.  reduce 158 (src line 1056)


state 184
	primary:  ID (.optargs ) 
	optargs: .    (129)

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  reduce 129 (src line 901)

	args  goto 199
	optargs  goto 244
	expr  goto 200
	primary  goto 111
	lvalue  goto 112

state 185
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.POW expr 
	expr:  expr.BADOP expr 
	primary:  ( expr.) 

	OR  shift 172
	AND  shift 171
	EQ  shift 173
	NE  shift 174
	LE  shift 179
	GE  shift 178
	<  shift 176
	>  shift 177
	BADOP  shift 181
	+  shift 167
	-  shift 168
	*  shift 169
	/  shift 170
	%  shift 175
	POW  shift 180
	)  shift 245
	.  error


state 186
	primary:  NOT primary.    (168)

	.  reduce 168 (src line 1106)


state 187
	primary:  TYPEID (.args ) 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  error

	args  goto 246
	expr  goto 200
	primary  goto 111
	lvalue  goto 112

state 188
	primary:  LEN lenarg.    (170)

	.  reduce 170 (src line 1116)


state 189
	lenarg:  TYPEID.    (171)

	.  reduce 171 (src line 1128)


state 190
	lenarg:  ID.    (172)
	lenarg:  ID.[ expr ] 
	lenarg:  ID.. ID 
	lenarg:  ID.^ 

	^  shift 249
	[  shift 247
	.  shift 248
	.  reduce 172 (src line 1130)


state 191
	typedef:  ID = type ;.    (22)

	.  reduce 22 (src line 314)


state 192
	typedef:  TYPEID = type ;.    (23)

	.  reduce 23 (src line 319)


state 193
	assignstmt:  lvalue = expr.; 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.POW expr 
	expr:  expr.BADOP expr 

	OR  shift 172
	AND  shift 171
	EQ  shift 173
	NE  shift 174
	LE  shift 179
	GE  shift 178
	<  shift 176
	>  shift 177
	BADOP  shift 181
	+  shift 167
	-  shift 168
	*  shift 169
	/  shift 170
	%  shift 175
	POW  shift 180
	;  shift 250
	.  error


state 194
	assignstmt:  lvalue : =.$$125 expr ; 
	$$125: .    (125)

	.  reduce 125 (src line 882)

	$$125  goto 251

state 195
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.POW expr 
	expr:  expr.BADOP expr 
	lvalue:  lvalue [ expr.] 

	OR  shift 172
	AND  shift 171
	EQ  shift 173
	NE  shift 174
	LE  shift 179
	GE  shift 178
	<  shift 176
	>  shift 177
	BADOP  shift 181
	+  shift 167
	-  shift 168
	*  shift 169
	/  shift 170
	%  shift 175
	POW  shift 180
	]  shift 252
	.  error


state 196
	lvalue:  lvalue . ID.    (178)

	.  reduce 178 (src line 1159)


state 197
	lvalue:  lvalue . TYPEID.    (179)

	.  reduce 179 (src line 1164)


state 198
	procstmt:  ID ( optargs.) ; 

	)  shift 253
	.  error


state 199
	optargs:  args.    (128)
	args:  args., expr 

	,  shift 254
	.  reduce 128 (src line 899)


state 200
	args:  expr.    (131)
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.POW expr 
	expr:  expr.BADOP expr 

	OR  shift 172
	AND  shift 171
	EQ  shift 173
	NE  shift 174
	LE  shift 179
	GE  shift 178
	<  shift 176
	>  shift 177
	BADOP  shift 181
	+  shift 167
	-  shift 168
	*  shift 169
	/  shift 170
	%  shift 175
	POW  shift 180
	.  reduce 131 (src line 913)


state 201
	casestmt:  SWITCH ( expr.) { cases } 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.POW expr 
	expr:  expr.BADOP expr 

	OR  shift 172
	AND  shift 171
	EQ  shift 173
	NE  shift 174
	LE  shift 179
	GE  shift 178
	<  shift 176
	>  shift 177
	BADOP  shift 181
	+  shift 167
	-  shift 168
	*  shift 169
	/  shift 170
	%  shift 175
	POW  shift 180
	)  shift 255
	.  error


state 202
	repeatstmt:  DO body WHILE.( expr ) ; 

	(  shift 256
	.  error


state 203
	ifstmt:  ifhdr body ELSE.body 
	ifstmt:  ifhdr body ELSE.ifstmt 

	IF  shift 88
	{  shift 49
	.  error

	body  goto 257
	ifstmt  goto 258
	ifhdr  goto 82

state 204
	whilestmt:  WHILE ( expr.) body 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.POW expr 
	expr:  expr.BADOP expr 

	OR  shift 172
	AND  shift 171
	EQ  shift 173
	NE  shift 174
	LE  shift 179
	GE  shift 178
	<  shift 176
	>  shift 177
	BADOP  shift 181
	+  shift 167
	-  shift 168
	*  shift 169
	/  shift 170
	%  shift 175
	POW  shift 180
	)  shift 259
	.  error


state 205
	forstmt:  FOR ( lvalue.= expr , forcond ) body 
	lvalue:  lvalue.[ expr ] 
	lvalue:  lvalue.. ID 
	lvalue:  lvalue.. TYPEID 
	lvalue:  lvalue.^ 

	=  shift 260
	^  shift 136
	[  shift 134
	.  shift 135
	.  error


state 206
	lvalue:  ID.    (176)

	.  reduce 176 (src line 1149)


state 207
	retstmt:  RETURN expr ;.    (111)

	.  reduce 111 (src line 782)


state 208
	ifhdr:  IF ( expr.) 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.POW expr 
	expr:  expr.BADOP expr 

	OR  shift 172
	AND  shift 171
	EQ  shift 173
	NE  shift 174
	LE  shift 179
	GE  shift 178
	<  shift 176
	>  shift 177
	BADOP  shift 181
	+  shift 167
	-  shift 168
	*  shift 169
	/  shift 170
	%  shift 175
	POW  shift 180
	)  shift 261
	.  error


state 209
	rangetype:  TYPEID expr DOTDOT.expr 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  error

	expr  goto 262
	primary  goto 111
	lvalue  goto 112

state 210
	ids:  ids ,.ID 
	ids:  ids ,.error 

	error  shift 264
	ID  shift 263
	.  error


state 211
	ids:  ids error.    (70)
	ids:  ids error.ID 

	ID  shift 265
	.  reduce 70 (src line 564)


state 212
	ordtype:  ( ids ).    (73)

	.  reduce 73 (src line 582)


state 213
	proctype:  PROCEDURE $$89 (.parms ) 

	error  shift 161
	REF  shift 163
	ID  shift 162
	TYPEID  shift 164
	.  error

	parms  goto 266
	parm  goto 160

state 214
	functype:  FUNCTION $$91 (.parms ) : funcret 

	error  shift 161
	REF  shift 163
	ID  shift 162
	TYPEID  shift 164
	.  error

	parms  goto 267
	parm  goto 160

state 215
	arraytype:  ARRAY [ TYPEID.] OF TYPEID 
	primary:  TYPEID.( args ) 
	lvalue:  TYPEID.    (181)

	(  shift 187
	]  shift 268
	.  reduce 181 (src line 1175)


state 216
	arraytype:  ARRAY [ expr.DOTDOT expr ] OF TYPEID 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.POW expr 
	expr:  expr.BADOP expr 

	OR  shift 172
	AND  shift 171
	EQ  shift 173
	NE  shift 174
	LE  shift 179
	GE  shift 178
	<  shift 176
	>  shift 177
	BADOP  shift 181
	+  shift 167
	-  shift 168
	*  shift 169
	/  shift 170
	%  shift 175
	POW  shift 180
	DOTDOT  shift 269
	.  error


state 217
	recordtype:  RECORD $$77 recordfields.    (78)

	.  reduce 78 (src line 613)


state 218
	recordfields:  {.fields } 

	ID  shift 272
	.  error

	fields  goto 270
	field  goto 271

state 219
	recordfields:  error.} 

	}  shift 273
	.  error


state 220
	procparms:  ( optparms ).    (37)

	.  reduce 37 (src line 392)


state 221
	parms:  parms ,.parm 
	parms:  parms ,.error 

	error  shift 275
	REF  shift 163
	ID  shift 162
	TYPEID  shift 164
	.  error

	parm  goto 274

state 222
	parms:  parms ;.parm 

	REF  shift 163
	ID  shift 162
	TYPEID  shift 164
	.  error

	parm  goto 276

state 223
	parms:  parms error.    (48)
	parms:  parms error.parm 

	REF  shift 163
	ID  shift 162
	TYPEID  shift 164
	.  reduce 48 (src line 459)

	parm  goto 277

state 224
	parm:  ID :.TYPEID 
	parm:  ID :.ID 

	ID  shift 279
	TYPEID  shift 278
	.  error


state 225
	parm:  REF ID.: TYPEID 
	parm:  REF ID.: ID 

	:  shift 280
	.  error


state 226
	parm:  REF TYPEID.: TYPEID 

	:  shift 281
	.  error


state 227
	parm:  TYPEID :.TYPEID 

	TYPEID  shift 282
	.  error


state 228
	funchdr:  FUNCTION ID $$41 ( optparms ).: funcret 

	:  shift 283
	.  error


state 229
	expr:  expr.+ expr 
	expr:  expr + expr.    (141)
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.POW expr 
	expr:  expr.BADOP expr 

	*  shift 169
	/  shift 170
	%  shift 175
	POW  shift 180
	.  reduce 141 (src line 973)


state 230
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr - expr.    (142)
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.POW expr 
	expr:  expr.BADOP expr 

	*  shift 169
	/  shift 170
	%  shift 175
	POW  shift 180
	.  reduce 142 (src line 978)


state 231
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr * expr.    (143)
	expr:  expr./ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.POW expr 
	expr:  expr.BADOP expr 

	POW  shift 180
	.  reduce 143 (src line 983)


state 232
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr / expr.    (144)
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.POW expr 
	expr:  expr.BADOP expr 

	POW  shift 180
	.  reduce 144 (src line 988)


state 233
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.AND expr 
	expr:  expr AND expr.    (145)
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.POW expr 
	expr:  expr.BADOP expr 

	EQ  shift 173
	NE  shift 174
	LE  shift 179
	GE  shift 178
	<  shift 176
	>  shift 177
	BADOP  shift 181
	+  shift 167
	-  shift 168
	*  shift 169
	/  shift 170
	%  shift 175
	POW  shift 180
	.  reduce 145 (src line 993)


state 234
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr OR expr.    (146)
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.POW expr 
	expr:  expr.BADOP expr 

	EQ  shift 173
	NE  shift 174
	LE  shift 179
	GE  shift 178
	<  shift 176
	>  shift 177
	BADOP  shift 181
	+  shift 167
	-  shift 168
	*  shift 169
	/  shift 170
	%  shift 175
	POW  shift 180
	.  reduce 146 (src line 998)


state 235
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr EQ expr.    (147)
	expr:  expr.NE expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.POW expr 
	expr:  expr.BADOP expr 

	+  shift 167
	-  shift 168
	*  shift 169
	/  shift 170
	%  shift 175
	POW  shift 180
	.  reduce 147 (src line 1003)


state 236
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr NE expr.    (148)
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.POW expr 
	expr:  expr.BADOP expr 

	+  shift 167
	-  shift 168
	*  shift 169
	/  shift 170
	%  shift 175
	POW  shift 180
	.  reduce 148 (src line 1008)


state 237
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.% expr 
	expr:  expr % expr.    (149)
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.POW expr 
	expr:  expr.BADOP expr 

	POW  shift 180
	.  reduce 149 (src line 1013)


state 238
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr < expr.    (150)
	expr:  expr.> expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.POW expr 
	expr:  expr.BADOP expr 

	+  shift 167
	-  shift 168
	*  shift 169
	/  shift 170
	%  shift 175
	POW  shift 180
	.  reduce 150 (src line 1018)


state 239
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr > expr.    (151)
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.POW expr 
	expr:  expr.BADOP expr 

	+  shift 167
	-  shift 168
	*  shift 169
	/  shift 170
	%  shift 175
	POW  shift 180
	.  reduce 151 (src line 1023)


state 240
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.GE expr 
	expr:  expr GE expr.    (152)
	expr:  expr.LE expr 
	expr:  expr.POW expr 
	expr:  expr.BADOP expr 

	+  shift 167
	-  shift 168
	*  shift 169
	/  shift 170
	%  shift 175
	POW  shift 180
	.  reduce 152 (src line 1028)


state 241
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr LE expr.    (153)
	expr:  expr.POW expr 
	expr:  expr.BADOP expr 

	+  shift 167
	-  shift 168
	*  shift 169
	/  shift 170
	%  shift 175
	POW  shift 180
	.  reduce 153 (src line 1033)


state 242
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.POW expr 
	expr:  expr POW expr.    (154)
	expr:  expr.BADOP expr 

	.  reduce 154 (src line 1038)


state 243
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.POW expr 
	expr:  expr.BADOP expr 
	expr:  expr BADOP expr.    (155)

	+  shift 167
	-  shift 168
	*  shift 169
	/  shift 170
	%  shift 175
	POW  shift 180
	.  reduce 155 (src line 1043)


state 244
	primary:  ID ( optargs.) 

	)  shift 284
	.  error


state 245
	primary:  ( expr ).    (167)

	.  reduce 167 (src line 1101)


state 246
	args:  args., expr 
	primary:  TYPEID ( args.) 

	,  shift 254
	)  shift 285
	.  error


state 247
	lenarg:  ID [.expr ] 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  error

	expr  goto 286
	primary  goto 111
	lvalue  goto 112

state 248
	lenarg:  ID ..ID 

	ID  shift 287
	.  error


state 249
	lenarg:  ID ^.    (175)

	.  reduce 175 (src line 1142)


state 250
	assignstmt:  lvalue = expr ;.    (124)

	.  reduce 124 (src line 877)


state 251
	assignstmt:  lvalue : = $$125.expr ; 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  error

	expr  goto 288
	primary  goto 111
	lvalue  goto 112

state 252
	lvalue:  lvalue [ expr ].    (177)

	.  reduce 177 (src line 1154)


state 253
	procstmt:  ID ( optargs ).; 

	;  shift 289
	.  error


state 254
	args:  args ,.expr 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  error

	expr  goto 290
	primary  goto 111
	lvalue  goto 112

state 255
	casestmt:  SWITCH ( expr ).{ cases } 

	{  shift 291
	.  error


state 256
	repeatstmt:  DO body WHILE (.expr ) ; 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  error

	expr  goto 292
	primary  goto 111
	lvalue  goto 112

state 257
	ifstmt:  ifhdr body ELSE body.    (121)

	.  reduce 121 (src line 853)


state 258
	ifstmt:  ifhdr body ELSE ifstmt.    (122)

	.  reduce 122 (src line 861)


state 259
	whilestmt:  WHILE ( expr ).body 

	{  shift 49
	.  error

	body  goto 293

state 260
	forstmt:  FOR ( lvalue =.expr , forcond ) body 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  error

	expr  goto 294
	primary  goto 111
	lvalue  goto 112

state 261
	ifhdr:  IF ( expr ).    (123)

	.  reduce 123 (src line 869)


state 262
	rangetype:  TYPEID expr DOTDOT expr.    (74)
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.POW expr 
	expr:  expr.BADOP expr 

	OR  shift 172
	AND  shift 171
	EQ  shift 173
	NE  shift 174
	LE  shift 179
	GE  shift 178
	<  shift 176
	>  shift 177
	BADOP  shift 181
	+  shift 167
	-  shift 168
	*  shift 169
	/  shift 170
	%  shift 175
	POW  shift 180
	.  reduce 74 (src line 588)


state 263
	ids:  ids , ID.    (67)

	.  reduce 67 (src line 545)


state 264
	ids:  ids , error.    (72)

	.  reduce 72 (src line 575)


state 265
	ids:  ids error ID.    (71)

	.  reduce 71 (src line 569)


state 266
	parms:  parms., parm 
	parms:  parms.; parm 
	parms:  parms.error 
	parms:  parms.error parm 
	parms:  parms., error 
	proctype:  PROCEDURE $$89 ( parms.) 

	error  shift 223
	,  shift 221
	;  shift 222
	)  shift 295
	.  error


state 267
	parms:  parms., parm 
	parms:  parms.; parm 
	parms:  parms.error 
	parms:  parms.error parm 
	parms:  parms., error 
	functype:  FUNCTION $$91 ( parms.) : funcret 

	error  shift 223
	,  shift 221
	;  shift 222
	)  shift 296
	.  error


state 268
	arraytype:  ARRAY [ TYPEID ].OF TYPEID 

	OF  shift 297
	.  error


state 269
	arraytype:  ARRAY [ expr DOTDOT.expr ] OF TYPEID 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  error

	expr  goto 298
	primary  goto 111
	lvalue  goto 112

state 270
	recordfields:  { fields.} 
	fields:  fields.field 
	fields:  fields.swfields 

	SWITCH  shift 302
	ID  shift 272
	}  shift 299
	.  error

	swfields  goto 301
	field  goto 300

state 271
	fields:  field.    (83)

	.  reduce 83 (src line 648)


state 272
	field:  ID.: TYPEID ; 

	:  shift 303
	.  error


state 273
	recordfields:  error }.    (80)

	.  reduce 80 (src line 626)


state 274
	parms:  parms , parm.    (45)

	.  reduce 45 (src line 439)


state 275
	parms:  parms , error.    (50)

	.  reduce 50 (src line 470)


state 276
	parms:  parms ; parm.    (46)

	.  reduce 46 (src line 446)


state 277
	parms:  parms error parm.    (49)

	.  reduce 49 (src line 464)


state 278
	parm:  ID : TYPEID.    (52)

	.  reduce 52 (src line 481)


state 279
	parm:  ID : ID.    (53)

	.  reduce 53 (src line 486)


state 280
	parm:  REF ID :.TYPEID 
	parm:  REF ID :.ID 

	ID  shift 305
	TYPEID  shift 304
	.  error


state 281
	parm:  REF TYPEID :.TYPEID 

	TYPEID  shift 306
	.  error


state 282
	parm:  TYPEID : TYPEID.    (56)

	.  reduce 56 (src line 503)


state 283
	funchdr:  FUNCTION ID $$41 ( optparms ) :.funcret 

	ID  shift 309
	TYPEID  shift 308
	.  error

	funcret  goto 307

state 284
	primary:  ID ( optargs ).    (166)

	.  reduce 166 (src line 1096)


state 285
	primary:  TYPEID ( args ).    (169)

	.  reduce 169 (src line 1111)


state 286
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.POW expr 
	expr:  expr.BADOP expr 
	lenarg:  ID [ expr.] 

	OR  shift 172
	AND  shift 171
	EQ  shift 173
	NE  shift 174
	LE  shift 179
	GE  shift 178
	<  shift 176
	>  shift 177
	BADOP  shift 181
	+  shift 167
	-  shift 168
	*  shift 169
	/  shift 170
	%  shift 175
	POW  shift 180
	]  shift 310
	.  error


state 287
	lenarg:  ID . ID.    (174)

	.  reduce 174 (src line 1137)


state 288
	assignstmt:  lvalue : = $$125 expr.; 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.POW expr 
	expr:  expr.BADOP expr 

	OR  shift 172
	AND  shift 171
	EQ  shift 173
	NE  shift 174
	LE  shift 179
	GE  shift 178
	<  shift 176
	>  shift 177
	BADOP  shift 181
	+  shift 167
	-  shift 168
	*  shift 169
	/  shift 170
	%  shift 175
	POW  shift 180
	;  shift 311
	.  error


state 289
	procstmt:  ID ( optargs ) ;.    (127)

	.  reduce 127 (src line 892)


state 290
	args:  args , expr.    (130)
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.POW expr 
	expr:  expr.BADOP expr 

	OR  shift 172
	AND  shift 171
	EQ  shift 173
	NE  shift 174
	LE  shift 179
	GE  shift 178
	<  shift 176
	>  shift 177
	BADOP  shift 181
	+  shift 167
	-  shift 168
	*  shift 169
	/  shift 170
	%  shift 175
	POW  shift 180
	.  reduce 130 (src line 907)


state 291
	casestmt:  SWITCH ( expr ) {.cases } 

	CASE  shift 314
	DEFAULT  shift 315
	.  error

	case  goto 313
	cases  goto 312

state 292
	repeatstmt:  DO body WHILE ( expr.) ; 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.POW expr 
	expr:  expr.BADOP expr 

	OR  shift 172
	AND  shift 171
	EQ  shift 173
	NE  shift 174
	LE  shift 179
	GE  shift 178
	<  shift 176
	>  shift 177
	BADOP  shift 181
	+  shift 167
	-  shift 168
	*  shift 169
	/  shift 170
	%  shift 175
	POW  shift 180
	)  shift 316
	.  error


state 293
	whilestmt:  WHILE ( expr ) body.    (113)

	.  reduce 113 (src line 801)


state 294
	forstmt:  FOR ( lvalue = expr., forcond ) body 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.POW expr 
	expr:  expr.BADOP expr 

	,  shift 317
	OR  shift 172
	AND  shift 171
	EQ  shift 173
	NE  shift 174
	LE  shift 179
	GE  shift 178
	<  shift 176
	>  shift 177
	BADOP  shift 181
	+  shift 167
	-  shift 168
	*  shift 169
	/  shift 170
	%  shift 175
	POW  shift 180
	.  error


state 295
	proctype:  PROCEDURE $$89 ( parms ).    (90)

	.  reduce 90 (src line 692)


state 296
	functype:  FUNCTION $$91 ( parms ).: funcret 

	:  shift 318
	.  error


state 297
	arraytype:  ARRAY [ TYPEID ] OF.TYPEID 

	TYPEID  shift 319
	.  error


state 298
	arraytype:  ARRAY [ expr DOTDOT expr.] OF TYPEID 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.POW expr 
	expr:  expr.BADOP expr 

	OR  shift 172
	AND  shift 171
	EQ  shift 173
	NE  shift 174
	LE  shift 179
	GE  shift 178
	<  shift 176
	>  shift 177
	BADOP  shift 181
	+  shift 167
	-  shift 168
	*  shift 169
	/  shift 170
	%  shift 175
	POW  shift 180
	]  shift 320
	.  error


state 299
	recordfields:  { fields }.    (79)

	.  reduce 79 (src line 618)


state 300
	fields:  fields field.    (81)

	.  reduce 81 (src line 636)


state 301
	fields:  fields swfields.    (82)

	.  reduce 82 (src line 642)


state 302
	swfields:  SWITCH.( ID ) { swcases } 

	(  shift 321
	.  error


state 303
	field:  ID :.TYPEID ; 

	TYPEID  shift 322
	.  error


state 304
	parm:  REF ID : TYPEID.    (54)

	.  reduce 54 (src line 492)


state 305
	parm:  REF ID : ID.    (55)

	.  reduce 55 (src line 497)


state 306
	parm:  REF TYPEID : TYPEID.    (57)

	.  reduce 57 (src line 509)


state 307
	funchdr:  FUNCTION ID $$41 ( optparms ) : funcret.    (42)

	.  reduce 42 (src line 423)


state 308
	funcret:  TYPEID.    (93)

	.  reduce 93 (src line 712)


state 309
	funcret:  ID.    (94)

	.  reduce 94 (src line 717)


state 310
	lenarg:  ID [ expr ].    (173)

	.  reduce 173 (src line 1132)


state 311
	assignstmt:  lvalue : = $$125 expr ;.    (126)

	.  reduce 126 (src line 887)


state 312
	casestmt:  SWITCH ( expr ) { cases.} 
	cases:  cases.case 

	CASE  shift 314
	DEFAULT  shift 315
	}  shift 323
	.  error

	case  goto 324

state 313
	cases:  case.    (134)

	.  reduce 134 (src line 931)


state 314
	case:  CASE.cexpr : stmts 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  error

	primary  goto 326
	lvalue  goto 112
	cexpr  goto 325

state 315
	case:  DEFAULT.: stmts 

	:  shift 327
	.  error


state 316
	repeatstmt:  DO body WHILE ( expr ).; 

	;  shift 328
	.  error


state 317
	forstmt:  FOR ( lvalue = expr ,.forcond ) body 

	ID  shift 330
	.  error

	forcond  goto 329

state 318
	functype:  FUNCTION $$91 ( parms ) :.funcret 

	ID  shift 309
	TYPEID  shift 308
	.  error

	funcret  goto 331

state 319
	arraytype:  ARRAY [ TYPEID ] OF TYPEID.    (75)

	.  reduce 75 (src line 594)


state 320
	arraytype:  ARRAY [ expr DOTDOT expr ].OF TYPEID 

	OF  shift 332
	.  error


state 321
	swfields:  SWITCH (.ID ) { swcases } 

	ID  shift 333
	.  error


state 322
	field:  ID : TYPEID.; 

	;  shift 334
	.  error


state 323
	casestmt:  SWITCH ( expr ) { cases }.    (132)

	.  reduce 132 (src line 920)


state 324
	cases:  cases case.    (133)

	.  reduce 133 (src line 925)


state 325
	case:  CASE cexpr.: stmts 
	cexpr:  cexpr., cexpr 

	,  shift 336
	:  shift 335
	.  error


state 326
	cexpr:  primary.    (138)
	cexpr:  primary.DOTDOT primary 

	DOTDOT  shift 337
	.  reduce 138 (src line 958)


state 327
	case:  DEFAULT :.stmts 

	error  shift 77
	DO  shift 81
	FOR  shift 84
	IF  shift 88
	SWITCH  shift 80
	RETURN  shift 85
	WHILE  shift 83
	ID  shift 79
	TYPEID  shift 87
	;  shift 86
	{  shift 49
	.  error

	stmt  goto 66
	body  goto 69
	assignstmt  goto 67
	casestmt  goto 70
	forstmt  goto 74
	ifstmt  goto 72
	procstmt  goto 68
	repeatstmt  goto 71
	retstmt  goto 75
	whilestmt  goto 73
	ifhdr  goto 82
	nullstmt  goto 76
	stmts  goto 338
	lvalue  goto 78

state 328
	repeatstmt:  DO body WHILE ( expr ) ;.    (112)

	.  reduce 112 (src line 791)


state 329
	forstmt:  FOR ( lvalue = expr , forcond.) body 

	)  shift 339
	.  error


state 330
	forcond:  ID.forop expr 

	LE  shift 343
	GE  shift 344
	<  shift 341
	>  shift 342
	.  error

	forop  goto 340

state 331
	functype:  FUNCTION $$91 ( parms ) : funcret.    (92)

	.  reduce 92 (src line 704)


state 332
	arraytype:  ARRAY [ expr DOTDOT expr ] OF.TYPEID 

	TYPEID  shift 345
	.  error


state 333
	swfields:  SWITCH ( ID.) { swcases } 

	)  shift 346
	.  error


state 334
	field:  ID : TYPEID ;.    (84)

	.  reduce 84 (src line 655)


state 335
	case:  CASE cexpr :.stmts 

	error  shift 77
	DO  shift 81
	FOR  shift 84
	IF  shift 88
	SWITCH  shift 80
	RETURN  shift 85
	WHILE  shift 83
	ID  shift 79
	TYPEID  shift 87
	;  shift 86
	{  shift 49
	.  error

	stmt  goto 66
	body  goto 69
	assignstmt  goto 67
	casestmt  goto 70
	forstmt  goto 74
	ifstmt  goto 72
	procstmt  goto 68
	repeatstmt  goto 71
	retstmt  goto 75
	whilestmt  goto 73
	ifhdr  goto 82
	nullstmt  goto 76
	stmts  goto 347
	lvalue  goto 78

state 336
	cexpr:  cexpr ,.cexpr 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  error

	primary  goto 326
	lvalue  goto 112
	cexpr  goto 348

state 337
	cexpr:  primary DOTDOT.primary 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  error

	primary  goto 349
	lvalue  goto 112

state 338
	stmts:  stmts.stmt 
	case:  DEFAULT : stmts.    (136)

	error  shift 77
	CASE  reduce 136 (src line 946)
	DEFAULT  reduce 136 (src line 946)
	DO  shift 81
	FOR  shift 84
	IF  shift 88
	SWITCH  shift 80
	RETURN  shift 85
	WHILE  shift 83
	ID  shift 79
	TYPEID  shift 87
	;  shift 86
	{  shift 49
	}  reduce 136 (src line 946)
	.  error

	stmt  goto 130
	body  goto 69
	assignstmt  goto 67
	casestmt  goto 70
	forstmt  goto 74
	ifstmt  goto 72
	procstmt  goto 68
	repeatstmt  goto 71
	retstmt  goto 75
	whilestmt  goto 73
	ifhdr  goto 82
	nullstmt  goto 76
	lvalue  goto 78

state 339
	forstmt:  FOR ( lvalue = expr , forcond ).body 

	{  shift 49
	.  error

	body  goto 350

state 340
	forcond:  ID forop.expr 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  error

	expr  goto 351
	primary  goto 111
	lvalue  goto 112

state 341
	forop:  <.    (116)

	.  reduce 116 (src line 826)


state 342
	forop:  >.    (117)

	.  reduce 117 (src line 831)


state 343
	forop:  LE.    (118)

	.  reduce 118 (src line 836)


state 344
	forop:  GE.    (119)

	.  reduce 119 (src line 841)


state 345
	arraytype:  ARRAY [ expr DOTDOT expr ] OF TYPEID.    (76)

	.  reduce 76 (src line 599)


state 346
	swfields:  SWITCH ( ID ).{ swcases } 

	{  shift 352
	.  error


state 347
	stmts:  stmts.stmt 
	case:  CASE cexpr : stmts.    (135)

	error  shift 77
	CASE  reduce 135 (src line 938)
	DEFAULT  reduce 135 (src line 938)
	DO  shift 81
	FOR  shift 84
	IF  shift 88
	SWITCH  shift 80
	RETURN  shift 85
	WHILE  shift 83
	ID  shift 79
	TYPEID  shift 87
	;  shift 86
	{  shift 49
	}  reduce 135 (src line 938)
	.  error

	stmt  goto 130
	body  goto 69
	assignstmt  goto 67
	casestmt  goto 70
	forstmt  goto 74
	ifstmt  goto 72
	procstmt  goto 68
	repeatstmt  goto 71
	retstmt  goto 75
	whilestmt  goto 73
	ifhdr  goto 82
	nullstmt  goto 76
	lvalue  goto 78

state 348
	cexpr:  cexpr., cexpr 
	cexpr:  cexpr , cexpr.    (137)

	.  reduce 137 (src line 953)


state 349
	cexpr:  primary DOTDOT primary.    (139)

	.  reduce 139 (src line 964)


state 350
	forstmt:  FOR ( lvalue = expr , forcond ) body.    (114)

	.  reduce 114 (src line 812)


state 351
	forcond:  ID forop expr.    (115)
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.% expr 
	expr:  expr.< expr 
	expr:  expr.> expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.POW expr 
	expr:  expr.BADOP expr 

	OR  shift 172
	AND  shift 171
	EQ  shift 173
	NE  shift 174
	LE  shift 179
	GE  shift 178
	<  shift 176
	>  shift 177
	BADOP  shift 181
	+  shift 167
	-  shift 168
	*  shift 169
	/  shift 170
	%  shift 175
	POW  shift 180
	.  reduce 115 (src line 820)


state 352
	swfields:  SWITCH ( ID ) {.swcases } 

	CASE  shift 355
	.  error

	swcases  goto 353
	swcase  goto 354

state 353
	swfields:  SWITCH ( ID ) { swcases.} 
	swcases:  swcases.swcase 

	CASE  shift 355
	}  shift 356
	.  error

	swcase  goto 357

state 354
	swcases:  swcase.    (87)

	.  reduce 87 (src line 674)


state 355
	swcase:  CASE.cexpr : fields 

	+  shift 113
	-  shift 114
	NIL  shift 119
	NOT  shift 124
	LEN  shift 126
	INT  shift 115
	CHAR  shift 116
	STR  shift 118
	REAL  shift 117
	TRUE  shift 120
	FALSE  shift 121
	ID  shift 122
	TYPEID  shift 125
	(  shift 123
	.  error

	primary  goto 326
	lvalue  goto 112
	cexpr  goto 358

state 356
	swfields:  SWITCH ( ID ) { swcases }.    (85)

	.  reduce 85 (src line 661)


state 357
	swcases:  swcases swcase.    (86)

	.  reduce 86 (src line 668)


state 358
	swcase:  CASE cexpr.: fields 
	cexpr:  cexpr., cexpr 

	,  shift 336
	:  shift 359
	.  error


state 359
	swcase:  CASE cexpr :.fields 

	ID  shift 272
	.  error

	fields  goto 360
	field  goto 271

state 360
	fields:  fields.field 
	fields:  fields.swfields 
	swcase:  CASE cexpr : fields.    (88)

	SWITCH  shift 302
	ID  shift 272
	.  reduce 88 (src line 680)

	swfields  goto 301
	field  goto 300

62 terminals, 67 nonterminals
182 grammar rules, 361/2000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
116 working sets used
memory: parser 296/30000
156 extra closures
1301 shift entries, 36 exceptions
151 goto entries
167 entries saved by goto default
Optimizer space used: output 698/30000
698 table entries, 6 zero
maximum spread: 62, maximum offset: 360
